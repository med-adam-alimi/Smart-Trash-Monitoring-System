#include <WiFi.h>
#include <PubSubClient.h>
#include <HCSR04.h>

// WiFi and MQTT credentials
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";
const char* mqtt_server = "MQTT_BROKER_IP";
const int mqtt_port = 1883;
const char* mqtt_user = "MQTT_USERNAME";
const char* mqtt_pass = "MQTT_PASSWORD";

// MQTT topics
const char* distance_topic = "trashmonitor/distance";
const char* status_topic = "trashmonitor/status";
const char* command_topic = "trashmonitor/command";

// Ultrasonic sensor pins
const int trigPin = 5;
const int echoPin = 18;

WiFiClient espClient;
PubSubClient client(espClient);
HCSR04 hc(trigPin, echoPin);

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    if (client.connect("ESP32Client", mqtt_user, mqtt_pass)) {
      Serial.println("connected");
      client.subscribe(command_topic);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  
  String message;
  for (int i =  Õè0; i < length; i++) {
    message += (char)payload[i];
  }
  Serial.println(message);
  
  // Handle commands here if needed
}

void setup() {
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  // Measure distance (trash level)
  double distance = hc.dist();
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  // Publish distance to MQTT
  char distanceStr[8];
  dtostrf(distance, 1, 2, distanceStr);
  client.publish(distance_topic, distanceStr);

  // Publish status (you can add more status info)
  String status = "{\"distance\":" + String(distance) + ",\"status\":\"ok\"}";
  client.publish(status_topic, status.c_str());

  delay(5000); // Send data every 5 seconds
}
